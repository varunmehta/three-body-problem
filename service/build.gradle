plugins {
	id 'org.springframework.boot' version '2.2.8.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'com.palantir.docker' version '0.25.0'
	id 'org.sonarqube' version '3.0'
	id 'jacoco'
	id 'java'
}

group = 'com.microservice'
version = '1.0.0'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

//	implementation 'org.springframework.cloud:spring-cloud-aws-autoconfigure'
//	implementation 'org.springframework.cloud:spring-cloud-starter-aws-parameter-config'

	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'

    compile 'io.springfox:springfox-swagger-ui:3.0.0'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	// testing dependencies
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation platform('org.testcontainers:testcontainers-bom:1.14.3') //import bom
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.testcontainers:localstack'
	testImplementation 'org.testcontainers:junit-jupiter'
}

docker {
    name 'trisolar:'.plus(version)
}

sonarqube {
    properties {
        property 'sonar.projectName', 'TRISOLAR'

    }
}

jacoco {
   toolVersion = "0.8.5"
   reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
    }
}

test {
	useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'test'
    finalizedBy jacocoTestReport
}
